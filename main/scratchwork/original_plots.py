import tools

if False:
    graph1 = {
        'Lander': [
            ( 1.0010919540229886 , 1.2142857142857142 , 0.0 ) ,
            ( 1.0020689655172415 , 3.857142857142857 , 0.8928571428571429 ) ,
            ( 1.004109195402299 , 5.357142857142857 , 1.7142857142857142 ) ,
            ( 1.0060344827586207 , 8.857142857142858 , 1.1428571428571428 ) ,
            ( 1.009051724137931 , 12.071428571428571 , 2.8214285714285716 ) ,
            ( 1.0110919540229886 , 12.642857142857142 , 3.5357142857142856 ) ,
        ],
        'Hopper': [
            ( 1.0010632183908046 , 1.027027027027027 , 0.0 ) ,
            ( 1.0020402298850575 , 2.6666666666666665 , 0.0 ) ,
            ( 1.004080459770115 , 3.7477477477477477 , 0.15315315315315314 ) ,
            ( 1.0060344827586207 , 4.324324324324325 , 0.1891891891891892 ) ,
            ( 1.0090229885057471 , 4.414414414414415 , 0.35135135135135137 ) ,
            ( 1.0110632183908046 , 4.558558558558558 , 0.1981981981981982 ) ,
        ],
        'Ant': [
            ( 1.0010632183908046 , 0.9824561403508771 , 0.0 ) ,
            ( 1.0020402298850575 , 1.912280701754386 , 0.06140350877192982 ) ,
            ( 1.004080459770115 , 2.824561403508772 , 0.11403508771929824 ) ,
            ( 1.0060344827586207 , 3.3333333333333335 , 0.38596491228070173 ) ,
            ( 1.0090229885057471 , 3.508771929824561 , 0.5175438596491229 ) ,
            ( 1.0110632183908046 , 3.9649122807017543 , 0.6578947368421053 ) ,
        ],
        'Humanoid': [
            ( 1.0010174418604652 , 1.0 , 0.0 ) ,
            ( 1.0020639534883722 , 1.396341463414634 , 0.10975609756097561 ) ,
            ( 1.0040406976744185 , 1.7682926829268293 , 0.25 ) ,
            ( 1.0061046511627907 , 1.7804878048780488 , 0.3871951219512195 ) ,
            ( 1.0091279069767443 , 1.8780487804878048 , 0.31097560975609756 ) ,
            ( 1.0111046511627908 , 1.975609756097561 , 0.3048780487804878 ) ,
        ],
        'Cheetah': [
            ( 1.0011046511627908 , 1.0 , 0.0 ) ,
            ( 1.0020348837209303 , 2.1736526946107784 , 0.0 ) ,
            ( 1.0040116279069768 , 2.9161676646706587 , 0.2155688622754491 ) ,
            ( 1.006046511627907 , 3.0479041916167664 , 0.17964071856287425 ) ,
            ( 1.0090988372093024 , 3.2035928143712575 , 0.25748502994011974 ) ,
            ( 1.0111046511627908 , 2.9161676646706587 , 0.4491017964071856 ) ,
        ],
        'Walker': [
            ( 1.0010174418604652 , 1.006993006993007 , 0.0 ) ,
            ( 1.0035755813953489 , 2.4615384615384617 , 0.0 ) ,
            ( 1.0061046511627907 , 2.8531468531468533 , 0.09090909090909091 ) ,
            ( 1.0086046511627906 , 3.1468531468531467 , 0.09090909090909091 ) ,
            ( 1.0111046511627908 , 3.7482517482517483 , 0.16083916083916083 ) ,
        ],
    }

    for each_name, each_data in graph1.items():
        points = [ (round(x-1.001,3), y, variance) for x, y, variance in each_data ]
        tools.multi_variance_plot(data={each_name: points}, vertical_label="Forcast", horizonal_label="Epsilon Coefficient", title=each_name)

graph2 = dict(
    Lander=[
        (0.0, 0.9958333333333333, 0.125, ), 
        (0.0009459459459459459, 1.0, 0.09583333333333334, ), 
        (
            0.002972972972972973, 
            0.9875, 
            0.07916666666666666, 
        ), 
        (
            0.004932432432432432, 
            1.0125, 
            0.11666666666666667, 
        ), 
        (
            0.007905405405405406, 
            0.9583333333333334, 
            0.12916666666666668, 
        ), 
        (0.009864864864864865, 0.975, 0.1125, ), 
    ], 
    Hopper=[
        (0.0, 1.0083333333333333, 0.0, ), 
        (
            0.0009728506787330316, 
            1.0, 
            0.004166666666666667, 
        ), 
        (
            0.003009049773755656, 
            0.9916666666666667, 
            0.016666666666666666, 
        ), 
        (
            0.0049547511312217195, 
            0.9791666666666666, 
            0.029166666666666667, 
        ), 
        (
            0.007941176470588234, 
            0.9541666666666667, 
            0.0375, 
        ), 
        (0.009909502262443439, 0.925, 0.0375, ), 
    ], 
    Ant=[
        (0.0, 1.0083333333333333, 0.020833333333333332, ), 
        (
            0.000995260663507109, 
            0.9791666666666666, 
            0.029166666666666667, 
        ), 
        (0.003127962085308057, 0.95, 0.05, ), 
        (
            0.00518957345971564, 
            0.9166666666666666, 
            0.07083333333333333, 
        ), 
        (0.008341232227488152, 0.8625, 0.1125, ), 
        (
            0.010402843601895735, 
            0.8708333333333333, 
            0.0625, 
        ), 
    ], 
    Humanoid=[
        (0.0, 1.0083333333333333, 0.1, ), 
        (
            0.0009698275862068965, 
            0.9916666666666667, 
            0.09166666666666666, 
        ), 
        (
            0.0028663793103448276, 
            0.9125, 
            0.17916666666666667, 
        ), 
        (
            0.004784482758620689, 
            0.9125, 
            0.12916666666666668, 
        ), 
        (0.007650862068965517, 0.8083333333333333, 0.125, ), 
        (
            0.009504310344827587, 
            0.7666666666666667, 
            0.14166666666666666, 
        ), 
    ], 
    Cheetah=[
        (0.0, 1.0083333333333333, 0.0, ), 
        (
            0.0009911894273127754, 
            0.9833333333333333, 
            0.008333333333333333, 
        ), 
        (
            0.0029295154185022027, 
            0.9416666666666667, 
            0.03333333333333333, 
        ), 
        (
            0.004889867841409692, 
            0.9291666666666667, 
            0.029166666666666667, 
        ), 
        (0.007797356828193832, 0.8125, 0.075, ), 
        (
            0.009713656387665198, 
            0.7875, 
            0.09166666666666666, 
        ), 
    ], 
    Walker=[
        (0.0, 1.0083333333333333, 0.0375, ), 
        (0.0023758099352051837, 0.9791666666666666, 0.05, ), 
        (
            0.004794816414686825, 
            0.9833333333333333, 
            0.04583333333333333, 
        ), 
        (
            0.007170626349892009, 
            0.9333333333333333, 
            0.06666666666666667, 
        ), 
        (0.009524838012958963, 0.95, 0.07083333333333333, ), 
    ], 
)

for each_name, each_data in graph2.items():
    points = [ (round(x,4), y*100, variance*100) for x, y, variance in each_data ]
    max_x = max(x for x, _, _ in points)
    min_x = min(x for x, _, _ in points)
    lowerbound = [ [x, 100 - 50*((x-min_x)/max_x), 0] for x,_,_ in points ]
    lowerbound[0][1] = 100
    lowerbound[-1][1] = 50
    tools.multi_variance_plot(
        title=each_name,
        max_x=0.0105,
        data={
            "V PrAC": points,
            "LowerBound":     lowerbound, # FIXME
            "V π*":   [ (x, 100, 0) for x, y, deviation in points ],
            "V rand": [ (x, 0, 0) for x, y, deviation in points ] ,
        },
        vertical_label="Performance %",
        horizonal_label="Epsilon Coefficient",
        color_key={
            "V PrAC": 'rgba(0,174,255, 1.0)',
            "LowerBound": 'rgba(221,215,144,1.0)',
            "V π*": 'rgb(0, 292, 192, 0.9)',
            "V rand": 'rgba(255,85,114,0.8)',
        },
        point_size={
            "V PrAC": 5,
            "LowerBound": 0,
            "V π*": 0,
            "V rand": 0,
        },
    )
    
    # deviations = [ variance for x, y, variance in each_data ]
    # print(f'''{each_name} deviations = {deviations}''')
    # tools.multi_variance_plot(data={each_name: points}, deviations=deviations, vertical_label="Relative Performance", horizonal_label="Epsilon Coefficient", title=each_name)
    
    # /* custom css for multi-plot */
    
    #     #stream-container {
    #         display: grid;
    #         grid-template-columns: 1fr 1fr;
    #         gap: 0rem;
    #         position: fixed;
    #         top: 0rem;
    #         left: 11rem;
    #         min-width: 80vw;
    #         width: fit-content;
    #         padding: 0;
    #         transform: scale(0.8);
    #         min-height: 0;
    #         overflow: visible;
    #     }
    #     body #stream-container > .card {
    #         margin: 0;
    #         margin-top: -3.7rem;
    #         padding: 0.4rem;
    #         box-shadow: none;
    #         border-radius: 0;
    #     }